[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "log",
    "section": "",
    "text": "This is my log. My thoughts, ideas, and experiences. My experiments with the observable truth.\nI am TokenBender. I am an engineer, a hacker, a citizen of the world.\nI love to learn. I love to make tools. I love to solve problems. I love to create mischievous things."
  },
  {
    "objectID": "index.html#consulting",
    "href": "index.html#consulting",
    "title": "log",
    "section": "Consulting",
    "text": "Consulting\nI offer consulting services in the areas of multimodal RAG, advanced search orchestration, building models, datasets, local model deployment. Reach out to me:"
  },
  {
    "objectID": "index.html#philosophy",
    "href": "index.html#philosophy",
    "title": "log",
    "section": "Philosophy",
    "text": "Philosophy\nI am a firm believer in the open web.\nMy core philosophy is interacting with the AI world via tools of experimentation and observation.\n\n\ne/xperiments philosophy:* No muh-favourite-architecture* Stay GPU-poor, stay foolish (literally)* Forever behind SoTA, always learning* Everyone sleeps on smol models* Data curation/evaluation is the MOAT* Synthetic dataset creation is art pic.twitter.com/CNgbDtLJbT\n\n— tokenbender (@4evaBehindSOTA) October 21, 2023"
  },
  {
    "objectID": "index.html#code-rendering-examples",
    "href": "index.html#code-rendering-examples",
    "title": "log",
    "section": "Code Rendering Examples",
    "text": "Code Rendering Examples\nIn this section, I’ll demonstrate how code rendering works in Quarto. Here are some examples in different programming languages:\n\nPython\nimport numpy as np\n\ndef add(a, b):\n    return a + b\n\nresult = add(3, 4)\nprint(f\"The result of add(3, 4) is: {result}\")\nOutput:\nThe result of add(3, 4) is: 7\n\n\nJavaScript\nfunction multiply(a, b) {\n  return a * b;\n}\n\nconsole.log(`The result of multiply(5, 6) is: ${multiply(5, 6)}`);\nOutput:\nThe result of multiply(5, 6) is: 30"
  }
]